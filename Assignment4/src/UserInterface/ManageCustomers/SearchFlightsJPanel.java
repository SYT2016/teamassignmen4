/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.ManageCustomers;

import Business.Customer.AssignCusToFlightList;
import Business.Customer.CustomerProfile;
import Business.Flight.Flight;
import Business.Flight.FlightSchedule;
import Util.DateUtil;
import java.awt.CardLayout;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author admin
 */
public class SearchFlightsJPanel extends javax.swing.JPanel {

    private JPanel cardSequence;
    private FlightSchedule flightSchedule;
    private CustomerProfile cusPro;
    private AssignCusToFlightList assignList;
    public SearchFlightsJPanel(JPanel cardSequence,FlightSchedule flightSchedule,CustomerProfile cusPro,AssignCusToFlightList assignList) {
        initComponents();
        this.cardSequence=cardSequence;
        this.flightSchedule=flightSchedule;
        this.cusPro=cusPro;
        this.assignList=assignList;
        populate(flightSchedule.getFlightThroughAvailSeats());
    }
    
    public void populate(ArrayList<Flight> l){
        DefaultTableModel dtm=(DefaultTableModel)tblSearchFlights.getModel();
        dtm.setRowCount(0);
        SimpleDateFormat sdf=new SimpleDateFormat("yyyy-MM-dd HH-mm");
        for(Flight f:l){
            Object[] row=new Object[5];
            row[0]=f;
            row[1]=sdf.format(f.getTakeOffTime());
            row[2]=sdf.format(f.getLandingTime());
            row[3]=f.getAirliner().getName();
            row[4]=f.getAvailSeats()+"";
            dtm.addRow(row);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        txtYear = new javax.swing.JTextField();
        comboMonth = new javax.swing.JComboBox<>();
        txtDay = new javax.swing.JTextField();
        btnSearch = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblSearchFlights = new javax.swing.JTable();
        btnBook = new javax.swing.JButton();
        BtnBack = new javax.swing.JButton();

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        jLabel1.setText("Search By Date:");

        comboMonth.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec" }));

        btnSearch.setText("Search");
        btnSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchActionPerformed(evt);
            }
        });

        tblSearchFlights.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Flight Code", "TakeOffTime", "ArrivalTime", "Airliner Name", "Avail Seats"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(tblSearchFlights);
        if (tblSearchFlights.getColumnModel().getColumnCount() > 0) {
            tblSearchFlights.getColumnModel().getColumn(0).setResizable(false);
            tblSearchFlights.getColumnModel().getColumn(1).setResizable(false);
            tblSearchFlights.getColumnModel().getColumn(2).setResizable(false);
            tblSearchFlights.getColumnModel().getColumn(3).setResizable(false);
            tblSearchFlights.getColumnModel().getColumn(4).setResizable(false);
        }

        btnBook.setText("Book");
        btnBook.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBookActionPerformed(evt);
            }
        });

        BtnBack.setText("<< Back");
        BtnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnBackActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(67, 67, 67)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(BtnBack)
                    .addComponent(btnBook)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(jLabel1)
                            .addGap(18, 18, 18)
                            .addComponent(txtYear, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(comboMonth, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(txtDay, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnSearch))
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 579, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(54, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(46, 46, 46)
                .addComponent(BtnBack)
                .addGap(116, 116, 116)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtYear, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(comboMonth, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtDay, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSearch))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(32, 32, 32)
                .addComponent(btnBook)
                .addContainerGap(169, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchActionPerformed
        if(txtYear.getText().equals("") || txtDay.getText().equals("")){
            JOptionPane.showMessageDialog(null, "Please fill in date");
        }else{
            Date d=new Date();
        try {
            d=DateUtil.strToDate(txtYear.getText()+"-"+comboMonth.getSelectedItem().toString()+"-"+txtDay.getText());
        } catch (ParseException ex) {
            Logger.getLogger(SearchFlightsJPanel.class.getName()).log(Level.SEVERE, null, ex);
        }
        //先根据游客的所在地和目的地筛出航班；
        ArrayList<Flight> l=flightSchedule.getFlightThroughAddress(cusPro.getFrom(),cusPro.getTo());
        //再在上面筛出的航班基础上根据日期筛航班
        ArrayList<Flight> ans=flightSchedule.getFlightListThroughDate(d, l);
        populate(ans);
        }    
    }//GEN-LAST:event_btnSearchActionPerformed

    private void btnBookActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBookActionPerformed
        int selectedRow=tblSearchFlights.getSelectedRow();
        if(selectedRow<0){
            JOptionPane.showMessageDialog(null, "Please select a flight");
        }
        else{
            Flight f=(Flight) tblSearchFlights.getValueAt(selectedRow, 0);
            BookFlightJPanel jp=new BookFlightJPanel(cardSequence,f,cusPro,assignList);
            cardSequence.add("BookFlightJPanel",jp);
            CardLayout l=(CardLayout)cardSequence.getLayout();
            l.next(cardSequence);
        }
    }//GEN-LAST:event_btnBookActionPerformed

    private void BtnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnBackActionPerformed
        cardSequence.remove(this);
        CardLayout layout=(CardLayout)cardSequence.getLayout();
        layout.previous(cardSequence);
    }//GEN-LAST:event_BtnBackActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BtnBack;
    private javax.swing.JButton btnBook;
    private javax.swing.JButton btnSearch;
    private javax.swing.JComboBox<String> comboMonth;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable tblSearchFlights;
    private javax.swing.JTextField txtDay;
    private javax.swing.JTextField txtYear;
    // End of variables declaration//GEN-END:variables
}
