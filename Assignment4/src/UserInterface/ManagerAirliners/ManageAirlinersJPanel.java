/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.ManagerAirliners;

import Business.Airliners.Airliner;
import Business.Flight.Flight;

import javax.swing.*;
import javax.swing.table.DefaultTableModel;
import java.awt.*;
import java.text.DateFormat;
import java.text.SimpleDateFormat;

/**
 *
 * @author admin
 */
public class ManageAirlinersJPanel extends javax.swing.JPanel {

    private final JPanel cardSequenceJPanel;

    private Airliner airliner;

    /**
     * Creates new form ManageAirlinersJPanel
     */
    public ManageAirlinersJPanel(JPanel cardSequenceJPanel, Airliner airliner) {
        this.cardSequenceJPanel = cardSequenceJPanel;
        this.airliner = airliner;
        initComponents();
        refreshTable(this.airliner);
    }

    public static void show(JPanel cardSequenceJPanel, Airliner airliner) {
        ManageAirlinersJPanel createAirlinerJPanel = new ManageAirlinersJPanel(cardSequenceJPanel, airliner);
        cardSequenceJPanel.add("CreateAirlinerJPanel", createAirlinerJPanel);
        CardLayout layout = (CardLayout) cardSequenceJPanel.getLayout();
        layout.next(cardSequenceJPanel);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        btnAddFlight = new javax.swing.JButton();
        btnViewFlightDetails = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblFlightDetails = new javax.swing.JTable();
        btnBack = new javax.swing.JButton();

        jLabel1.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        jLabel1.setText("Manage your airliner");

        btnAddFlight.setText("Add your fight");
        btnAddFlight.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddFlightActionPerformed(evt);
            }
        });

        btnViewFlightDetails.setText("View your filght details");
        btnViewFlightDetails.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewFlightDetailsActionPerformed(evt);
            }
        });

        tblFlightDetails.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Flight No", "Take off", "Landing", "Take off time", "Landing time"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblFlightDetails.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(tblFlightDetails);
        if (tblFlightDetails.getColumnModel().getColumnCount() > 0) {
            tblFlightDetails.getColumnModel().getColumn(0).setResizable(false);
            tblFlightDetails.getColumnModel().getColumn(1).setResizable(false);
            tblFlightDetails.getColumnModel().getColumn(2).setResizable(false);
            tblFlightDetails.getColumnModel().getColumn(3).setResizable(false);
            tblFlightDetails.getColumnModel().getColumn(4).setResizable(false);
        }

        btnBack.setText("<<Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addComponent(btnBack)
                        .addGap(179, 179, 179)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(107, 107, 107)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 581, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnAddFlight)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnViewFlightDetails, javax.swing.GroupLayout.PREFERRED_SIZE, 196, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(68, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addComponent(btnBack))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(48, 48, 48)
                        .addComponent(jLabel1)))
                .addGap(42, 42, 42)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnViewFlightDetails)
                    .addComponent(btnAddFlight))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(112, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnViewFlightDetailsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewFlightDetailsActionPerformed
        int row = tblFlightDetails.getSelectedRow();
        if (row < 0) {
            JOptionPane.showMessageDialog(null, "Pls select a row!!", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
        Flight flight = (Flight) tblFlightDetails.getValueAt(row, 0);
        ViewAirlineJPanel.show(this.cardSequenceJPanel, flight);
    }//GEN-LAST:event_btnViewFlightDetailsActionPerformed

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        cardSequenceJPanel.remove(this);
        CardLayout layout = (CardLayout) cardSequenceJPanel.getLayout();
        layout.previous(cardSequenceJPanel);
    }//GEN-LAST:event_btnBackActionPerformed

    public void refreshTable(Airliner airliner) {
        this.airliner = airliner;
        int rowCount = tblFlightDetails.getRowCount();
        DefaultTableModel model = (DefaultTableModel)tblFlightDetails.getModel();
        for(int i=rowCount-1;i>=0;i--) {
            model.removeRow(i);
        }

        DateFormat format = new SimpleDateFormat("YY/MM/dd HH:mm");
        for(Flight flight : airliner.getFlightMap()) {
            Object[] row = new Object[6];
            row[0] = flight;
            row[1] = flight.getTakeOffPlace().toString();
            row[2] = flight.getLandingPlace().toString();
            row[3] = format.format(flight.getTakeOffTime());
            row[4] = format.format(flight.getLandingTime());
            model.addRow(row);
        }
    }

    private void btnAddFlightActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddFlightActionPerformed
        AddAirplaneJPanel addAirplaneJPanel = new AddAirplaneJPanel(this.cardSequenceJPanel, airliner);
        this.cardSequenceJPanel.add("AddAirplaneJPanel", addAirplaneJPanel);
        CardLayout layout = (CardLayout) this.cardSequenceJPanel.getLayout();
        layout.next(this.cardSequenceJPanel);
    }//GEN-LAST:event_btnAddFlightActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAddFlight;
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnViewFlightDetails;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblFlightDetails;
    // End of variables declaration//GEN-END:variables
}
